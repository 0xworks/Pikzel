#version 450 core

// Converts 2D "cube cross" into cubemap

const float PI = 3.141592;

layout(set = 0, binding = 0) uniform sampler2D uTexture;

layout(set = 0, binding = 1, rgba8) restrict writeonly uniform imageCube outCubeMap;


vec2 GetTexCoords() {
   vec2 st = gl_GlobalInvocationID.xy / vec2(imageSize(outCubeMap));
   float u;
   float v;
   if (gl_GlobalInvocationID.z == 0) {
      // +x;
      u = (3.0 - st.s) / 4.0;
      v = (2.0 - st.t) / 3.0;
   } else if (gl_GlobalInvocationID.z == 1) {
      // -x
      u = (1.0 - st.s) / 4.0;
      v = (2.0 - st.t) / 3.0;
   } else if (gl_GlobalInvocationID.z == 2) {
      // -y
      u = (2.0 - st.s) / 4.0;
      v = (3.0 - st.t) / 3.0;
   } else if (gl_GlobalInvocationID.z == 3) {
      // +y
      u = (2.0 - st.s) / 4.0;
      v = (1.0 - st.t) / 3.0;
   } else if (gl_GlobalInvocationID.z == 4) {
      // +z
      u = (4.0 - st.s) / 4.0;
      v = (2.0 - st.t) / 3.0;
   } else if (gl_GlobalInvocationID.z == 5) {
      // -z
      u = (2.0 - st.s) / 4.0;
      v = (2.0 - st.t) / 3.0;
   }
   return vec2(u,v);
}


layout(local_size_x = 32, local_size_y = 32, local_size_z = 1) in;
void main() {
   vec2 uv = GetTexCoords();
   vec4 color = texture(uTexture, uv);

   imageStore(outCubeMap, ivec3(gl_GlobalInvocationID), color);
}
